{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"FrappeAPI","text":"<p>\u26a0\ufe0f Alert: Beta Version</p> <p>Build APIs for Frappe with the simplicity of FastAPI! FrappeAPI aims to streamline your Frappe development experience by offering a familiar, intuitive API creation process.</p> <p>Note: This project is currently in beta and not yet ready for production use. Expect changes and improvements as we work towards a stable release.</p>"},{"location":"#why","title":"Why?","text":"<p>Despite Frappe &gt;= 15.0.0 pushing towards using type hints for API development and enhancing <code>frappe.whitelist()</code>, FrappeAPI aims to take it a step further by:</p> <ul> <li>Wrapping <code>frappe.whitelist()</code> for an even smoother API design</li> <li>Providing automatic API documentation (like FastAPI) at <code>/docs</code></li> <li>Implementing response-model-based serialization to guard contract between client and server</li> <li>Ultimately delivering a FastAPI-like developer experience in Frappe</li> </ul> <p>The goal is to make Frappe API development more intuitive, type-safe, and self-documenting, building upon Frappe's recent improvements.</p>"},{"location":"#roadmap","title":"Roadmap","text":"<ul> <li> Implement <code>app.get(...)</code> method</li> <li> Implement <code>app.post(...)</code> method</li> <li> Implement <code>app.put(...)</code> method</li> <li> Implement <code>app.patch(...)</code> method</li> <li> Implement <code>app.delete(...)</code> method</li> </ul>"},{"location":"#query-parameter-features","title":"Query Parameter Features","text":"<ul> <li> Automatic query parameter parsing/conversion based on type hints</li> <li> Required query parameters <code>needy: str</code></li> <li> Optional query parameters with default values <code>skip: int = 0</code></li> <li> Optional query parameters without default values <code>limit: Union[int, None] = None</code></li> <li> Automatic Documentation generation for query parameters</li> <li> Enum support for query parameters</li> <li> Additional information and validation for query parameters</li> <li> String validations<ul> <li> min_length</li> <li> max_length</li> <li> regex pattern</li> </ul> </li> <li> Numeric validations<ul> <li> gt</li> <li> ge</li> <li> lt</li> <li> le</li> </ul> </li> <li> <p> Metadata</p> <ul> <li> title</li> <li> description</li> <li> deprecated</li> </ul> </li> <li> <p> to be continued...</p> </li> </ul>"},{"location":"#related-frappe-prs-and-issues","title":"Related Frappe PRs and Issues","text":"<ul> <li>PR #23135: Introducing type hints for API functions</li> <li>PR #22300: Enhancing <code>frappe.whitelist()</code> functionality</li> <li>Issue #14905: Discussion on improving API documentation</li> <li>PR #19029: Efforts to improve type safety in Frappe</li> </ul>"}]}